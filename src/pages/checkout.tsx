import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useContext, useState } from "react";
import CartContext from "../context/cartContext";
import { formatPrice } from "../utils/formatPrice";
import { useAutoAnimate } from "@formkit/auto-animate/react";

interface CartItem {
  listingId: string;
  listingTitle: string;
  listingPrice: number;
  listingImage: string | undefined;
  quantity: number;
}

const Checkout: NextPage = () => {
  const { cart, setCart } = useContext(CartContext);

  const [shipping, setShipping] = useState<number>(0);

  const [parent] = useAutoAnimate(/* optional config */);

  const removeItemFromCart = (id: string) => {
    const updatedCart = cart.filter((i) => i.listingId !== id);
    setCart(updatedCart);
  };

  const updateQuantity = (e: any, item: CartItem) => {
    const updatedCart = cart.map((cartItem:CartItem) => {
      return cartItem.listingId === item.listingId
        ? {
            ...cartItem,
            quantity:
              e.target.textContent === "+"
                ? (item.quantity += 1)
                : (item.quantity -= 1),
          }
        : cartItem;
    });
    setCart(updatedCart);
  };

  const submitCheckout = async () => {

    const res = await fetch("/api/checkout", {
      method: "POST",
      body: JSON.stringify({
        items: cart,
      }),
    });
    const response = await res.json();
    window.location = response.url;
  }

  return (
    <>
      <Head>
        <title>Checkout</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main className="max-w-screen flex min-h-screen w-full justify-center p-12">
        <div className="flex w-[75%] flex-col justify-between p-14">
          {cart.length > 0 ? (
            <>
              <ul ref={parent as any} className="my-8">
                {cart.map((item: CartItem) => (
                  <li
                    key={item.listingId}
                    className="flex flex-col space-y-3 border-b-2 py-6 text-left sm:flex-row sm:space-x-5 sm:space-y-0"
                  >
                    <div className="shrink-0">
                      <img
                        className="h-40 w-40 max-w-full rounded-lg object-cover"
                        src={item.listingImage}
                        alt=""
                      />
                    </div>

                    <div className="relative flex flex-1 flex-col justify-between">
                      <div className="sm:col-gap-5 sm:grid sm:grid-cols-2">
                        <div className="pr-8 sm:pr-5">
                          <p className="text-xl font-semibold text-gray-900">
                            {item.listingTitle}
                          </p>
                          <p className="mx-0 mt-1 mb-0 text-sm text-gray-400">
                            {/* {item.quantity} */}what looks good here?
                          </p>
                        </div>

                        <div className="mt-4 flex justify-between sm:mt-0">
                          <p className="w-20 shrink-0 text-base font-semibold text-gray-900 sm:ml-8 sm:text-right">
                            {formatPrice(item.listingPrice * item.quantity)}
                          </p>

                          <div className="">
                            <div className="mx-auto flex h-8 items-stretch text-gray-600">
                              <button
                                onClick={(e) => updateQuantity(e, item)}
                                className="flex items-center justify-center rounded-l-md bg-gray-200 px-4 transition hover:bg-black hover:text-white"
                              >
                                -
                              </button>
                              <div className="flex w-full items-center justify-center bg-gray-100 px-4 text-xs uppercase transition">
                                {item.quantity}
                              </div>
                              <button
                                onClick={(e) => updateQuantity(e, item)}
                                className="flex items-center justify-center rounded-r-md bg-gray-200 px-4 transition hover:bg-black hover:text-white"
                              >
                                +
                              </button>
                            </div>
                          </div>
                          <button
                            onClick={() => removeItemFromCart(item.listingId)}
                            type="button"
                            className="flex rounded p-2 text-center text-gray-500 transition-all duration-200 ease-in-out hover:text-gray-900 focus:shadow"
                          >
                            <svg
                              className="h-5 w-5"
                              xmlns="http://www.w3.org/2000/svg"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M6 18L18 6M6 6l12 12"
                                className=""
                              ></path>
                            </svg>
                          </button>
                        </div>
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            </>
          ) : (
            <p>No items</p>
          )}
        </div>
        <div className="flex w-[33%] flex-col py-14">
          <div className="mt-6 py-2">
            <div className="flex items-center justify-between border-b-2 px-6 py-12">
              <p className="text-xl text-gray-400">Subtotal</p>
              <p className="text-xl font-semibold text-gray-900">
                {formatPrice(
                  cart.reduce(
                    (acc: number, item: CartItem) =>
                      acc + item.listingPrice * item.quantity,
                    0
                  )
                )}
              </p>
            </div>
            <div className="flex items-center justify-between border-b-2 px-6 py-12">
              <p className="text-xl text-gray-400">Shipping</p>
              <p className="text-xl font-semibold text-gray-900">
                Calculated on checkout
              </p>
            </div>
          </div>
          <div className="mt-6 flex items-center justify-between px-6 py-12">
            <p className="text-xl font-bold text-gray-900">Total</p>
            <p className="text-2xl font-semibold text-gray-900">
              <span className="text-xs font-normal text-gray-400">AUD</span>{" "}
              {formatPrice(
                cart?.reduce(
                  (acc: number, item: CartItem) =>
                    acc + item.listingPrice * item.quantity,
                  0
                ) + shipping
              )}
            </p>
          </div>

          <div className="mt-6 text-center">
            <button
              onClick={submitCheckout}
              type="button"
              className="group inline-flex w-full items-center justify-center rounded-md bg-gray-900 px-6 py-4 text-lg font-semibold text-white transition-all duration-200 ease-in-out hover:bg-gray-800 focus:shadow"
            >
              Checkout
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="ml-4 h-6 w-6 transition-all group-hover:ml-8"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                strokeWidth="2"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M13 7l5 5m0 0l-5 5m5-5H6"
                />
              </svg>
            </button>
            <Link
              href="/listings"
              type="button"
              className="group mt-5 inline-flex w-full items-center justify-center rounded-md bg-gray-900 px-6 py-4 text-lg font-semibold text-white transition-all duration-200 ease-in-out hover:bg-gray-800 focus:shadow"
            >
              Continue Shopping
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="ml-4 h-6 w-6 transition-all group-hover:ml-8"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                strokeWidth="2"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M13 7l5 5m0 0l-5 5m5-5H6"
                />
              </svg>
            </Link>
          </div>
        </div>
      </main>
    </>
  );
};

export default Checkout;
