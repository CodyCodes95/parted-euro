import { NextPage } from "next";
import Head from "next/head";
import React, { useEffect } from "react";
import { trpc } from "../../../utils/trpc";
import { Input } from "@material-tailwind/react";

const AddListing: NextPage = () => {
  const [title, setTitle] = React.useState<string>("");
  const [description, setDescription] = React.useState<string>("");
  const [condition, setCondition] = React.useState<string>("");
  const [price, setPrice] = React.useState<number>(0);
  const [weight, setWeight] = React.useState<number>(0);
  const [length, setLength] = React.useState<number>(0);
  const [width, setWidth] = React.useState<number>(0);
  const [height, setHeight] = React.useState<number>(0);
  const [parts, setParts] = React.useState<object>([]);

  const cars = trpc.cars.getAll.useQuery();
  const saveListing = trpc.listings.createListing.useMutation();

  const onSave = async () => {
    const result = await saveListing.mutateAsync({
      title: title,
      description: description,
      condition: condition,
      price: price,
      weight: weight,
      length: length,
      width: width,
      height: height,
    });
    setTitle("");
    setDescription("");
    setCondition("");
    setPrice(0);
    setWeight(0);
    setLength(0);
    setWidth(0);
    setHeight(0);
  };

  return (
    <>
      <Head>
        <title>Create Listing</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-white">
        <div className="w-72">
          <Input color="teal" label="Username" />
        </div>
        <div className="space-y-6 p-6">
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Title
            </label>
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Description
            </label>
            <input
              type="textarea"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Price
            </label>
            <input
              type="text"
              value={price}
              onChange={(e) => setPrice(Number(e.target.value) * 100)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Weight
            </label>
            <input
              type="text"
              value={weight}
              onChange={(e) => setWeight(Number(e.target.value) * 1000)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Price
            </label>
            <input
              type="text"
              value={length}
              onChange={(e) => setLength(Number(e.target.value) * 10)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Width
            </label>
            <input
              type="text"
              value={width}
              onChange={(e) => setWidth(Number(e.target.value) * 10)}
            />
          </div>
          <div className="">
            <label className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">
              Height
            </label>
            <input
              type="text"
              value={height}
              onChange={(e) => setHeight(Number(e.target.value) * 10)}
            />
          </div>
        </div>
      </main>
    </>
  );
};

export default AddListing;
