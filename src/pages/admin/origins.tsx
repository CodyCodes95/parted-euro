import { type NextPage } from "next";
import Head from "next/head";
import React, { useMemo, useState } from "react";
import { trpc } from "../../utils/trpc";
import AddOrigin from "../../components/origins/AddOrigin";
import SortedTable from "../../components/tables/SortedTable";

interface IOrigin {
  vin: string;
  car: ICar;
  year: number;
  cost: number;
}
interface ICar {
  id: string;
  make: string;
  series: string;
  generation: string;
  model: string;
}

const Origins: NextPage = () => {
  const [showModal, setShowModal] = React.useState(false);
  const origins = trpc.origins.getAll.useQuery();
  const [headCells, setHeadCells] = useState<readonly string[]>([]);
  const [rows, setRows] = useState<IOrigin[]>([]);

  useMemo(() => {
     setHeadCells([]);
    setRows([]);
    if (!origins.data) return;
    setHeadCells((): any => {
      const cells = Object.keys(origins.data[0])
        .filter((key) => key !== "id")
        .map((key: any) => {
          return {
            disablePadding: false,
            id: key,
            numeric: false,
            label: key,
          };
        });
      return cells;
    });
    origins.data?.forEach((car) => {
      setRows((prev) => [...prev, car]);
    });
  }, [origins.data]);

  return (
    <>
      <Head>
        <title>Origins</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-white">
        {showModal ? (
          <AddOrigin showModal={showModal} setShowModal={setShowModal} />
        ) : null}
        <div>
          <button onClick={() => setShowModal(!showModal)}>Add Origin</button>
        </div>
        <SortedTable headCells={headCells} rows={rows} title={"Origins"} />
      </main>
    </>
  );
};

export default Origins;
